# Generated by Django 5.2.1 on 2025-08-05 07:51

from django.db import migrations
from django.contrib.auth.hashers import make_password
import random


def create_sample_users(apps, schema_editor):
    User = apps.get_model('accounts', 'User')
    UserInfo = apps.get_model('accounts', 'UserInfo')
    
    # Sample data for users
    users_data = [
        {
            'email': 'nguyen.van.a@example.com',
            'full_name': 'Nguyễn Văn A',
            'password': 'password123',
            'social_provider': 'none',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0901234567',
                'address': '123 Đường ABC, Quận 1, TP.HCM',
                'salary': 15000000
            }
        },
        {
            'email': 'tran.thi.b@example.com',
            'full_name': 'Trần Thị B',
            'password': 'password123',
            'social_provider': 'google',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0912345678',
                'address': '456 Đường XYZ, Quận 2, TP.HCM',
                'salary': 18000000
            }
        },
        {
            'email': 'le.van.c@example.com',
            'full_name': 'Lê Văn C',
            'password': 'password123',
            'social_provider': 'facebook',
            'status': 'ACTIVE',
            'role': 'ADMIN',
            'user_info': {
                'phone_number': '0923456789',
                'address': '789 Đường DEF, Quận 3, TP.HCM',
                'salary': 25000000
            }
        },
        {
            'email': 'pham.thi.d@example.com',
            'full_name': 'Phạm Thị D',
            'password': 'password123',
            'social_provider': 'apple',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0934567890',
                'address': '321 Đường GHI, Quận 4, TP.HCM',
                'salary': 12000000
            }
        },
        {
            'email': 'hoang.van.e@example.com',
            'full_name': 'Hoàng Văn E',
            'password': 'password123',
            'social_provider': 'none',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0945678901',
                'address': '654 Đường JKL, Quận 5, TP.HCM',
                'salary': 20000000
            }
        },
        {
            'email': 'vu.thi.f@example.com',
            'full_name': 'Vũ Thị F',
            'password': 'password123',
            'social_provider': 'google',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0956789012',
                'address': '987 Đường MNO, Quận 6, TP.HCM',
                'salary': 16000000
            }
        },
        {
            'email': 'dang.van.g@example.com',
            'full_name': 'Đặng Văn G',
            'password': 'password123',
            'social_provider': 'facebook',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0967890123',
                'address': '147 Đường PQR, Quận 7, TP.HCM',
                'salary': 14000000
            }
        },
        {
            'email': 'bui.thi.h@example.com',
            'full_name': 'Bùi Thị H',
            'password': 'password123',
            'social_provider': 'apple',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0978901234',
                'address': '258 Đường STU, Quận 8, TP.HCM',
                'salary': 17000000
            }
        },
        {
            'email': 'do.van.i@example.com',
            'full_name': 'Đỗ Văn I',
            'password': 'password123',
            'social_provider': 'none',
            'status': 'ACTIVE',
            'role': 'USER',
            'user_info': {
                'phone_number': '0989012345',
                'address': '369 Đường VWX, Quận 9, TP.HCM',
                'salary': 19000000
            }
        },
        {
            'email': 'ly.thi.j@example.com',
            'full_name': 'Lý Thị J',
            'password': 'password123',
            'social_provider': 'google',
            'status': 'ACTIVE',
            'role': 'SUPER_ADMIN',
            'user_info': {
                'phone_number': '0990123456',
                'address': '741 Đường YZ, Quận 10, TP.HCM',
                'salary': 30000000
            }
        }
    ]
    
    for user_data in users_data:
        # Extract user_info data
        user_info_data = user_data.pop('user_info')
        
        # Create user
        user = User.objects.create(
            email=user_data['email'],
            full_name=user_data['full_name'],
            password=make_password(user_data['password']),
            social_provider=user_data['social_provider'],
            status=user_data['status'],
            role=user_data['role'],
            is_active=True
        )
        
        # Create user info
        UserInfo.objects.create(
            user=user,
            phone_number=user_info_data['phone_number'],
            address=user_info_data['address'],
            salary=user_info_data['salary']
        )


def reverse_create_sample_users(apps, schema_editor):
    User = apps.get_model('accounts', 'User')
    UserInfo = apps.get_model('accounts', 'UserInfo')
    
    # Delete all sample users (this will cascade to user_info due to OneToOneField)
    sample_emails = [
        'nguyen.van.a@example.com',
        'tran.thi.b@example.com',
        'le.van.c@example.com',
        'pham.thi.d@example.com',
        'hoang.van.e@example.com',
        'vu.thi.f@example.com',
        'dang.van.g@example.com',
        'bui.thi.h@example.com',
        'do.van.i@example.com',
        'ly.thi.j@example.com'
    ]
    
    User.objects.filter(email__in=sample_emails).delete()


class Migration(migrations.Migration):

    dependencies = [
        ("accounts", "0012_userinfo_salary"),
    ]

    operations = [
        migrations.RunPython(create_sample_users, reverse_create_sample_users),
    ]
